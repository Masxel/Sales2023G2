@page "/countries/edit/{id:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
<h3>Editar País</h3>

@if(country is null)
{
    <p>Cargando...</p>
}
else
{
    <CountryForm @ref="countryForm"  country="country" OnValidSubmit="EditAsync" ReturnAction="Return"/>
}



@code {
    //Puede ser nulo '?'
    private Country? country;
    private CountryForm? countryForm;

    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>($"/api/countries/{id}");


        if (responseHttp.Error)
        {
            if(responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        country = responseHttp.Response;
    }


    private async Task EditAsync()
    {
        var responseHttp = await repository.Put("/api/countries/", country);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();


    }

    private void Return()
    {
        countryForm!.formPostedSuccessFully = true;
        navigationManager.NavigateTo("/countries");
    }

}
